import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;


public class SimpleCalendarFrame extends JFrame implements ChangeListener {

	private ViewController viewController;
	private CalendarController eventController;
	private CalendarModel CalendarModel;
	//day view is the right side of the panel
	private DayView DayView;
	private MonthView MonthView;
	private FourDayView FourDayView;
	final JPanel rightPanel;
	private JPanel lastView = new JPanel();
	public JPanel rightView = new JPanel();


	/**
	 * CalendarFrame constructor creates a CalendarFrame object
	 *
	 */
	public SimpleCalendarFrame() throws IOException
	{

		
		viewController = new ViewController();
		
		//has the day view
		CalendarModel = new CalendarModel();

		DayView = new DayView(CalendarModel);
		FourDayView = new FourDayView(CalendarModel);
		rightPanel = new JPanel(new BorderLayout());
		JPanel rightChoicePanel = new JPanel(new FlowLayout());

		JButton dayChoice = new JButton("Day");
		JButton weekChoice = new JButton("Week");
		JButton monthChoice = new JButton("Month");
		JButton fourDayChoice = new JButton("4 Days");
		JButton agendaChoice = new JButton("Agenda");
		rightChoicePanel.add(dayChoice);
		rightChoicePanel.add(weekChoice);
		rightChoicePanel.add(monthChoice);
		rightChoicePanel.add(fourDayChoice);
		rightChoicePanel.add(agendaChoice);
		rightPanel.add(rightChoicePanel, BorderLayout.NORTH);

		CalendarModel.addChangeListener(this);
		
		eventController = new CalendarController(CalendarModel);
		eventController.setDayView(DayView);
		
		final CalendarView calendar = new CalendarView(eventController, CalendarModel);
		DayView.setCalendar(calendar);
		eventController.setLittleCalendar(calendar);
		MonthView = new MonthView(eventController,CalendarModel, calendar);
		eventController.setMonthView(MonthView);
		
		JPanel left = new JPanel();
		left.setLayout(new BorderLayout());

		JPanel p = new JPanel(new FlowLayout());
		p.add(calendar);
		calendar.setPreferredSize(new Dimension(300, 300));

		left.add(p, BorderLayout.CENTER);

		setLayout(new BorderLayout());
		add(left, BorderLayout.WEST);
		add(rightPanel, BorderLayout.CENTER);
		setTitle("CALENDAR");

		rightPanel.add(DayView, BorderLayout.CENTER);
		rightPanel.validate();
		eventController.get().view(eventController.getYear(), eventController.getMonth(), eventController.getDay());
		rightPanel.repaint();

		//added views to view array here/////
		viewController.add(DayView);
		viewController.add(MonthView);
		////////////////////////////////////
		
		
		dayChoice.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				DayView.currentView = true;
				MonthView.currentView = false;
				FourDayView.currentView = false;
				rightPanel.remove(rightView);
				rightPanel.add(DayView, BorderLayout.CENTER);
				add(rightPanel);
				
				lastView = rightView;
				rightView = DayView;
				
				rightPanel.validate();
				rightPanel.repaint();
			}
		});
		monthChoice.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				rightPanel.remove(rightView);
				DayView.currentView = false;
				FourDayView.currentView = false;
				MonthView.currentView = true;
				rightPanel.add(MonthView, BorderLayout.CENTER);
				add(rightPanel);
				lastView = rightView;
				rightView = MonthView;
				rightPanel.validate();
				rightPanel.repaint();
				
			}
		});
		fourDayChoice.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				rightPanel.remove(rightView);
				DayView.currentView = false;
				MonthView.currentView = false;
				FourDayView.currentView = true;
				rightPanel.add(FourDayView, BorderLayout.CENTER);
				add(rightPanel);
				lastView = rightView;
				rightView = FourDayView;
				rightPanel.validate();
				rightPanel.repaint();
				
			}
		});

		
		
}

	

	/**
 * stateChanged() repaints ViewOption
 * @param: CalendarModel
 */
public void stateChanged(ChangeEvent e) 
{
	rightPanel.remove(lastView);
	rightPanel.add(rightView, BorderLayout.CENTER);
	rightPanel.validate();
	rightPanel.repaint();
	this.repaint();
}
}
